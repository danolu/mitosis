{
  "version": 3,
  "sources": ["../../datatables.net-buttons/js/buttons.colVis.mjs"],
  "sourcesContent": ["/*!\n * Column visibility buttons for Buttons and DataTables.\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\nimport Buttons from 'datatables.net-buttons';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n$.extend(DataTable.ext.buttons, {\n\t// A collection of column visibility buttons\n\tcolvis: function (dt, conf) {\n\t\tvar node = null;\n\t\tvar buttonConf = {\n\t\t\textend: 'collection',\n\t\t\tinit: function (dt, n) {\n\t\t\t\tnode = n;\n\t\t\t},\n\t\t\ttext: function (dt) {\n\t\t\t\treturn dt.i18n('buttons.colvis', 'Column visibility');\n\t\t\t},\n\t\t\tclassName: 'buttons-colvis',\n\t\t\tcloseButton: false,\n\t\t\tbuttons: [\n\t\t\t\t{\n\t\t\t\t\textend: 'columnsToggle',\n\t\t\t\t\tcolumns: conf.columns,\n\t\t\t\t\tcolumnText: conf.columnText\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\n\t\t// Rebuild the collection with the new column structure if columns are reordered\n\t\tdt.on('column-reorder.dt' + conf.namespace, function () {\n\t\t\tdt.button(null, dt.button(null, node).node()).collectionRebuild([\n\t\t\t\t{\n\t\t\t\t\textend: 'columnsToggle',\n\t\t\t\t\tcolumns: conf.columns,\n\t\t\t\t\tcolumnText: conf.columnText\n\t\t\t\t}\n\t\t\t]);\n\t\t});\n\n\t\treturn buttonConf;\n\t},\n\n\t// Selected columns with individual buttons - toggle column visibility\n\tcolumnsToggle: function (dt, conf) {\n\t\tvar columns = dt\n\t\t\t.columns(conf.columns)\n\t\t\t.indexes()\n\t\t\t.map(function (idx) {\n\t\t\t\treturn {\n\t\t\t\t\textend: 'columnToggle',\n\t\t\t\t\tcolumns: idx,\n\t\t\t\t\tcolumnText: conf.columnText\n\t\t\t\t};\n\t\t\t})\n\t\t\t.toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to toggle column visibility\n\tcolumnToggle: function (dt, conf) {\n\t\treturn {\n\t\t\textend: 'columnVisibility',\n\t\t\tcolumns: conf.columns,\n\t\t\tcolumnText: conf.columnText\n\t\t};\n\t},\n\n\t// Selected columns with individual buttons - set column visibility\n\tcolumnsVisibility: function (dt, conf) {\n\t\tvar columns = dt\n\t\t\t.columns(conf.columns)\n\t\t\t.indexes()\n\t\t\t.map(function (idx) {\n\t\t\t\treturn {\n\t\t\t\t\textend: 'columnVisibility',\n\t\t\t\t\tcolumns: idx,\n\t\t\t\t\tvisibility: conf.visibility,\n\t\t\t\t\tcolumnText: conf.columnText\n\t\t\t\t};\n\t\t\t})\n\t\t\t.toArray();\n\n\t\treturn columns;\n\t},\n\n\t// Single button to set column visibility\n\tcolumnVisibility: {\n\t\tcolumns: undefined, // column selector\n\t\ttext: function (dt, button, conf) {\n\t\t\treturn conf._columnText(dt, conf);\n\t\t},\n\t\tclassName: 'buttons-columnVisibility',\n\t\taction: function (e, dt, button, conf) {\n\t\t\tvar col = dt.columns(conf.columns);\n\t\t\tvar curr = col.visible();\n\n\t\t\tcol.visible(\n\t\t\t\tconf.visibility !== undefined ? conf.visibility : !(curr.length ? curr[0] : false)\n\t\t\t);\n\t\t},\n\t\tinit: function (dt, button, conf) {\n\t\t\tvar that = this;\n\t\t\tbutton.attr('data-cv-idx', conf.columns);\n\n\t\t\tdt.on('column-visibility.dt' + conf.namespace, function (e, settings) {\n\t\t\t\tif (!settings.bDestroying && settings.nTable == dt.settings()[0].nTable) {\n\t\t\t\t\tthat.active(dt.column(conf.columns).visible());\n\t\t\t\t}\n\t\t\t}).on('column-reorder.dt' + conf.namespace, function () {\n\t\t\t\t// Button has been removed from the DOM\n\t\t\t\tif (conf.destroying) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (dt.columns(conf.columns).count() !== 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// This button controls the same column index but the text for the column has\n\t\t\t\t// changed\n\t\t\t\tthat.text(conf._columnText(dt, conf));\n\n\t\t\t\t// Since its a different column, we need to check its visibility\n\t\t\t\tthat.active(dt.column(conf.columns).visible());\n\t\t\t});\n\n\t\t\tthis.active(dt.column(conf.columns).visible());\n\t\t},\n\t\tdestroy: function (dt, button, conf) {\n\t\t\tdt.off('column-visibility.dt' + conf.namespace).off(\n\t\t\t\t'column-reorder.dt' + conf.namespace\n\t\t\t);\n\t\t},\n\n\t\t_columnText: function (dt, conf) {\n\t\t\tif (typeof conf.text === 'string') {\n\t\t\t\treturn conf.text;\n\t\t\t}\n\n\t\t\tvar title = dt.column(conf.columns).title();\n\t\t\tvar idx = dt.column(conf.columns).index();\n\n\t\t\ttitle = title\n\t\t\t\t.replace(/\\n/g, ' ') // remove new lines\n\t\t\t\t.replace(/<br\\s*\\/?>/gi, ' ') // replace line breaks with spaces\n\t\t\t\t.replace(/<select(.*?)<\\/select\\s*>/gi, ''); // remove select tags, including options text\n\n\t\t\t// Strip HTML comments\n\t\t\ttitle = DataTable.Buttons.stripHtmlComments(title);\n\n\t\t\t// Use whatever HTML stripper DataTables is configured for\n\t\t\ttitle = DataTable.util.stripHtml(title).trim();\n\n\t\t\treturn conf.columnText ? conf.columnText(dt, idx, title) : title;\n\t\t}\n\t},\n\n\tcolvisRestore: {\n\t\tclassName: 'buttons-colvisRestore',\n\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.colvisRestore', 'Restore visibility');\n\t\t},\n\n\t\tinit: function (dt, button, conf) {\n\t\t\t// Use a private parameter on the column. This gets moved around with the\n\t\t\t// column if ColReorder changes the order\n\t\t\tdt.columns().every(function () {\n\t\t\t\tvar init = this.init();\n\n\t\t\t\tif (init.__visOriginal === undefined) {\n\t\t\t\t\tinit.__visOriginal = this.visible();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\taction: function (e, dt, button, conf) {\n\t\t\tdt.columns().every(function (i) {\n\t\t\t\tvar init = this.init();\n\n\t\t\t\tthis.visible(init.__visOriginal);\n\t\t\t});\n\t\t}\n\t},\n\n\tcolvisGroup: {\n\t\tclassName: 'buttons-colvisGroup',\n\n\t\taction: function (e, dt, button, conf) {\n\t\t\tdt.columns(conf.show).visible(true, false);\n\t\t\tdt.columns(conf.hide).visible(false, false);\n\n\t\t\tdt.columns.adjust();\n\t\t},\n\n\t\tshow: [],\n\n\t\thide: []\n\t}\n});\n\n\nexport default DataTable;\n"],
  "mappings": "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",
  "names": ["jQuery", "dt"]
}
